#!/bin/sh /etc/rc.common
# ipfixprobe, IPFIX flow exporter
# Copyright (C) 2022 CESNET

#
# How to use profiles:
# /etc/init.d/ipfixprobe start         - start all enabled profiles
# /etc/init.d/ipfixprobe start A B C   - stop all running profiles and start A, B and C profiles only
# /etc/init.d/ipfixprobe stop          - stop all profiles
# /etc/init.d/ipfixprobe stop A C      - stop A and C profiles only
# /etc/init.d/ipfixprobe enable        - start all enabled profiles on startup
# /etc/init.d/ipfixprobe disable       - disable all profiles on startup
# /etc/init.d/ipfixprobe restart       - stop and start all enabled profiles
# /etc/init.d/ipfixprobe reload        - stop and start all enabled profiles
#

START=50
STOP=50

USE_PROCD=1

CONFIG_FILE=ipfixprobe
BIN_FILE=/usr/bin/ipfixprobe

. /lib/functions.sh

handle_interface() {
    local ifc="$1"
    local blocks="$2"
    local pktinblock="$3"
    procd_append_param command -i "raw;i=$ifc;p=${pktinblock};b=${blocks}"
}

handle_plugins() {
    local plugin="$1"
    procd_append_param command -p "$plugin"
}

start_profile()
{
   local PROFILE="$1"
   local OPTION="$2"

   logger -p daemon.notice -t ipfixprobe "starting instance with profile $PROFILE"

   procd_open_instance "$PROFILE"

   procd_set_param command "$BIN_FILE"

   config_get PACKET_BLOCKS      "$PROFILE"  raw_blocks           ""
   config_get PACKETS_IN_BLOCK   "$PROFILE"  raw_packetsinblock   ""

   config_list_foreach "$PROFILE"   interfaces   handle_interface     "${PACKET_BLOCKS:-2}" "${PACKETS_IN_BLOCK:-10}"
   config_list_foreach "$PROFILE"   plugins     handle_plugins	     ""

   config_get IPFIX_HOST         "$PROFILE"  ipfix_host        ""
   config_get IPFIX_PORT         "$PROFILE"  ipfix_port        ""
   config_get IPFIX_UDP          "$PROFILE"  ipfix_udp         ""
   config_get IPFIX_MTU          "$PROFILE"  ipfix_mtu         ""
   config_get CACHE_SIZE         "$PROFILE"  cache_size        ""
   config_get CACHE_LINE         "$PROFILE"  cache_line        ""
   config_get ACTIVE_TIMEOUT     "$PROFILE"  active_timeout    ""
   config_get INACTIVE_TIMEOUT   "$PROFILE"  inactive_timeout  ""
   config_get LINK               "$PROFILE"  link              ""
   config_get DIR                "$PROFILE"  dir               ""
   config_get SPLITBIFLOW        "$PROFILE"  split_biflow      ""
   config_get RESPAWN            "$PROFILE"  respawn           ""
   config_get RESPAWN_THRESHOLD  "$PROFILE"  respawn_threshold ""
   config_get RESPAWN_TIMEOUT    "$PROFILE"  respawn_timeout   ""
   config_get RESPAWN_RETRY      "$PROFILE"  respawn_retry     ""
   config_get CORE               "$PROFILE"  core              ""
   config_get ENABLED            "$PROFILE"  enabled           ""

   [ "${ENABLED:-0}" -eq 0 -a "$OPTION" == "only_enabled" ] && return
   [ "${IPFIX_UDP:-0}" -eq 1 ] && UDP_PARAM=";u"
   [ "${SPLITBIFLOW:-0}" -eq 1 ] && SPLIT_PARAM=";S"

   procd_append_param command -o "ipfix;h=$IPFIX_HOST;p=${IPFIX_PORT:-4739};I=${LINK:-0};d=${DIR:-0}$UDP_PARAM;m=${IPFIX_MTU:-1458}"
   procd_append_param command -s "cache;s=${CACHE_SIZE:-10};l=${CACHE_LINE:-2};a=${ACTIVE_TIMEOUT:-300};i=${INACTIVE_TIMEOUT:-30}$SPLIT_PARAM"

   procd_set_param limits core="${CORE:-0}"
   procd_set_param stdout 1
   procd_set_param stderr 1
   procd_close_instance
}

start_service()
{
   config_load "$CONFIG_FILE"

   if [ $# -eq 0 ]; then
      # start all (enabled) profiles
      config_foreach start_profile profile only_enabled
   else
      # start only specified profiles
      for i in "$@"; do
         start_profile "$i"
      done
   fi
}
