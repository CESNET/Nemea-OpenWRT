#!/bin/sh /etc/rc.common
# ipfixprobe, IPFIX flow exporter
# Copyright (C) 2022-2023 CESNET

#
# How to use:
# /etc/init.d/ipfixprobe start         - start all enabled profiles
# /etc/init.d/ipfixprobe stop          - stop all profiles
# /etc/init.d/ipfixprobe enable        - start all enabled profiles on startup
# /etc/init.d/ipfixprobe disable       - disable all profiles on startup
# /etc/init.d/ipfixprobe restart       - stop and start all enabled profiles
# /etc/init.d/ipfixprobe reload        - stop and start all enabled profiles
#

START=50
STOP=50

USE_PROCD=1

NAME=ipfixprobe
PROG=/usr/bin/ipfixprobe

validate_section_ipfixprobe()
{
    uci_load_validate ipfixprobe ipfixprobe "$1" "$2" \
        'enabled:bool:0' \
        'interfaces:list(string)' \
        'plugins:list(string)' \
        'split_biflow:bool:0' \
        'ipfix_host:host:127.0.0.1' \
        'ipfix_port:port:4739' \
        'ipfix_udp:bool:1' \
        'ipfix_mtu:uinteger:1452' \
        'link:uinteger' \
        'dir:uinteger' \
        'active_timeout:uinteger:300' \
        'inactive_timeout:uinteger:30' \
        'raw_blocks:uinteger:2' \
        'raw_packetsinblock:uinteger:10' \
        'cache_size:uinteger:1024' \
        'cache_line:uinteger:4' \
        'respawn:bool:1' \
        'respawn_threshold:uinteger:3600' \
        'respawn_timeout:uinteger:5' \
        'respawn_retry:uinteger:5' \
        'core:bool:0'
}

handle_interface() {
    local ifc="$1"
    local blocks="$2"
    local pktinblock="$3"
    procd_append_param command -i "raw;i=$ifc;p=${pktinblock};b=${blocks}"
}

handle_plugins() {
    local plugin="$1"
    procd_append_param command -p "$plugin"
}

ipfixprobe_profile()
{
   local PROFILE="$1"

   [ "$2" = 0 ] || {
      echo "Validation failed"
      return 1
   }

   if [ "$enabled" -eq 0 ]; then
      logger -p daemon.notice -t ipfixprobe "ipfixprobe profile $PROFILE disabled"
      return 0
   else
      logger -p daemon.notice -t ipfixprobe "ipfixprobe profile $PROFILE enabled"
   fi

   procd_open_instance "$PROFILE"

   procd_set_param command "$PROG"

   config_list_foreach "$PROFILE"  interfaces  handle_interface     "${raw_blocks}" "${raw_packetsinblock}"
   config_list_foreach "$PROFILE"  plugins     handle_plugins       ""

   [ "${ipfix_udp}" -eq 1 ] && UDP_PARAM=";u"
   [ "${split_biflow}" -eq 1 ] && SPLIT_PARAM=";S"

   procd_append_param command -o "ipfix;h=$ipfix_host;p=${ipfix_port};I=${link};d=${dir}$UDP_PARAM;m=${ipfix_mtu}"
   procd_append_param command -s "cache;s=${cache_size};l=${cache_line};a=${active_timeout};i=${inactive_timeout}$SPLIT_PARAM"

   procd_set_param limits core="${core}"
   procd_set_param stdout 1
   procd_set_param stderr 1
   procd_close_instance
}

start_service()
{
   config_load "$NAME"
   config_foreach validate_section_ipfixprobe profile ipfixprobe_profile
}

service_triggers() {
   procd_add_reload_trigger "$NAME"
   procd_add_validation validate_section_ipfixprobe
}
